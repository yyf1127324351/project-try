   目标（Target）：定义一个客户端使用的特定接口。
   客户端（Client）：使用目标接口，与和目标接口一致的对象合作。
   被适配者（Adaptee）：一个现存需要适配的接口。
   适配器（Adapter）：负责将Adaptee的接口转换为Target的接口。适配器是一个具体的类，这是该模式的核心。
1.类适配器
所谓类适配器，指的是适配器Adapter继承我们的被适配者Adaptee，并实现目标接口Target。由于Java中是单继承，所以这个适配器仅仅只能服务于所继承的被适配者Adaptee

类适配器的优点：
由于适配器类是适配者类的子类，因此可以再适配器类中置换一些适配者的方法，使得适配器的灵活性更强。

类适配器的缺点：
对于Java、C#等不支持多重继承的语言，一次最多只能适配一个适配者类，而且目标抽象类只能为接口，不能为类，其使用有一定的局限性，不能将一个适配者类和他的子类同时适配到目标接口。
